class Solution {
public:
    int search(int A[], int n, int target) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(n==0) return -1;
        int maxp=findmax(A,n);
        if(target==A[0]) return 0;
        else if(target>A[0]) return bs(A,n,1,maxp,target);
        else if(target<A[0]) return bs(A,n,maxp+1,n-1,target);
    }
   
    int bs(int A[], int n, int left, int right, int target)
    {
        if(n==0 || left>=n || right<=0) return -1;
        int i=left, j=right, mid;
        while(i<=j){
            mid=(i+j)>>1;
            if(A[mid]==target) return mid;
            if(A[mid]<target) i=mid+1;
            else j=mid-1;
        }
        return -1;
       
    }
   
    int findmax(int A[], int n)
    {
        int i=0, j=n-1;
        int mid;
        while(i<=j){
            mid=(i+j)>>1;
            if(mid==n-1) return mid;
            if(A[mid+1]<A[mid]) return mid;
            if(A[mid]>=A[0]) i=mid+1;
            else if(A[mid]<A[0]) j=mid-1;
        }
    }
};
