class Solution {
public:
    vector<int> searchRange(int A[], int n, int target) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(n == 0) return vector<int>(2,-1);
        int beg, end;
        beg = find(A,n,target,-1);
        if(beg == -1) return vector<int>(2,-1);
        end = find(A,n,target,1);
        vector<int> res;
        res.push_back(beg);
        res.push_back(end);
        return res;
    }
    
    int find(int A[], int n, int target, int flag){
        int i = 0, j = n - 1, mid;
        while(i <= j){
            mid = i + ((j - i) >> 1);
            if(A[mid] == target){
                if(flag == -1){
                    if(mid > 0 && A[mid+flag] == target) j = mid - 1;
                    else if(mid == 0 || A[mid+flag] != target) return mid;
                }
                else{
                    if(mid < n - 1 && A[mid+flag] == target) i = mid + 1;
                    else if(mid == n - 1 || A[mid+flag] != target) return mid;
                }               
            }
            else if(A[mid] > target) j = mid - 1;
            else i = mid + 1;
        }
        return -1;
    }
};
