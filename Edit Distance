class Solution {
public:
    int minDistance(string word1, string word2) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int l1 = word1.length(), l2 = word2.length();
        if(l1 == 0) return l2;
        if(l2 == 0) return l1;
        vector<vector<int> > dp(l1+1, vector<int>(l2+1));
        dp[l1][l2] = 0;
        for(int i = 0; i < l1; i++) dp[i][l2] = l1 - i;
        for(int i = 0; i < l2; i++) dp[l1][i] = l2 - i;
        for(int i = l1 - 1; i >= 0; i--)
            for(int j = l2 - 1; j >= 0; j--)
                dp[i][j] = (word1[i] == word2[j]) ? dp[i+1][j+1] : min3(dp[i+1][j+1], dp[i+1][j], dp[i][j+1]) + 1;
        return dp[0][0];
    }
   
    int min3(int a, int b, int c)
    {
        int res=a;
        res=min(res,b);
        res=min(res,c);
        return res;
    }
};
