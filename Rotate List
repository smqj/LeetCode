/**
* Definition for singly-linked list.
* struct ListNode {
*     int val;
*     ListNode *next;
*     ListNode(int x) : val(x), next(NULL) {}
* };
*/
class Solution {
public:
    ListNode *rotateRight(ListNode *head, int k) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(head == NULL || k<1) return head;
        ListNode *newHead, *prev, *last;
        size_t n = 1;
        prev = head;
        while(prev->next){
            ++n;
            prev = prev->next;
        }
        k%=n;
        size_t t = n - k;
        if(k == 0) return head;
        prev = head;
        while(--t) prev = prev->next;
        last = newHead = prev->next;
        while(last->next) last = last->next;
        last->next = head;
        prev->next = NULL;
        head = newHead;
        return head;
    }
};
