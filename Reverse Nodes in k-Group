/**
* Definition for singly-linked list.
* struct ListNode {
*     int val;
*     ListNode *next;
*     ListNode(int x) : val(x), next(NULL) {}
* };
*/
class Solution {
public:
    ListNode *reverseKGroup(ListNode *head, int k) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        if(head == NULL || k < 2) return head;
        ListNode *addHead = new ListNode(-1);
        addHead->next = head;
        int t;
        ListNode *prev, *last;
        prev = addHead;
        ListNode *p, *q, *r;
        while(1){
            t = k;
            last = prev->next;
            while(--t && last) last = last->next;
            if(t > 0 || last ==NULL) break;
            p = prev->next;
            q = p->next;
            p->next = last->next;
            prev->next = last;
            prev = p;
            while(p != last){
                r = q->next;
                q->next = p;
                p = q;
                q = r;
            }
        }
        head = addHead->next;
        delete addHead;
        addHead = NULL;
        return head;
    }
};
