//注意：不是求minDepth(left)和minDepth(right)的最小值 可能为0
/**
* Definition for binary tree
* struct TreeNode {
*     int val;
*     TreeNode *left;
*     TreeNode *right;
*     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
* };
*/
class Solution {
public:
    int minDepth(TreeNode *root) {
        // Start typing your C/C++ solution below
        // DO NOT write int main() function
        int l, r;
        if(!root) return 0;
        l = minDepth(root->left);
        r = minDepth(root->right);
        if(l == 0 && r == 0) return 1;
        else if(l == 0 && r != 0) return r+1;
        else if(l != 0 && r == 0) return l+1;
        else return (l<r)?l+1:r+1;
    }
};
